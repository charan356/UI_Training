What is a service?

It provides us method to keep data across the lifetime of the angular app
It provides us method to communicate data across the controllers in a consistent way
This is a singleton object and it gets instantiated only once per application
It is used to organize and share data and functions across the application.


Services are singleton. All the components of application works with a single instance of the service.
Service instance gets created when the application componenents need it.


var CalculatorService = angular.module('CalculatorService', [])
.service('Calculator', function () {
    this.square = function (a) { return a*a};

});


var myApp = angular.module('myApp', ['CalculatorService']);
myApp.controller('CalculatorController', function ($scope, Calculator) {

    $scope.findSquare = function () {
        $scope.answer = Calculator.square($scope.number);
    }
});

<div class="container">
        <div>
            <div ng-controller="CalculatorController">
                Enter a number:
                <input type="number" ng-model="number">
                <button  ng-click="findSquare()">Square</button>
                <div>{{answer}}</div>
            </div>
        </div>
    </div>

all scopes are created with prototypal inheritance, meaning that they
 have access to their parent scopes. By default, for any property that AngularJS cannot
 find on a local scope, AngularJS will crawl up to the containing (parent) scope and look
 for the property or method there. If AngularJS can’t find the property there,
it will walk to that scope’s parent and so on and so forth until it reaches the $rootScope.



    Using the service() method uses the function constructor and it returns the object or instance of the function to work with
    Using the factory() method uses the returned value of the function. It returns the value of the function returned after the execution